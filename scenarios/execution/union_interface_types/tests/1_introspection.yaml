name: introspect on union and intersection types
given:
  query: |
    {
      Named: __type(name: "Named") {
        kind
        name
        fields { name }
        interfaces { name }
        possibleTypes { name }
        enumValues { name }
        inputFields { name }
      }
      Pet: __type(name: "Pet") {
        kind
        name
        fields { name }
        interfaces { name }
        possibleTypes { name }
        enumValues { name }
        inputFields { name }
      }
    }
when:
  execute:
then:
  data:
    Named:
      kind: "INTERFACE"
      name: "Named"
      fields:
        - name: "name"
      interfaces: null
      possibleTypes:
        - name: "Cat"
        - name: "Dog"
        - name: "Person"
      enumValues: null
      inputFields: null
    Pet:
      kind: "UNION"
      name: "Pet"
      fields: null
      interfaces: null
      possibleTypes:
        - name: "Dog"
        - name: "Cat"
      enumValues: null
      inputFields: null
