name: allows fragment conditions to be abstract types
given:
  query: |
    {
      __typename
      name
      pets { ...PetFields }
      friends { ...FriendFields }
    }

    fragment PetFields on Pet {
      __typename
      ... on Dog {
        name
        barks
      }
      ... on Cat {
        name
        meows
      }
    }

    fragment FriendFields on Named {
      __typename
      name
      ... on Dog {
        barks
      }
      ... on Cat {
        meows
      }
    }
when:
  execute:
    test-value: bob
then:
  data:
    __typename: "Person"
    name: "Bob"
    pets:
      - {__typename: "Cat", name: "Garfield", meows: false}
      - {__typename: "Dog", name: "Odie", barks: true}
    friends:
      - {__typename: "Person", name: "Liz"}
      - {__typename: "Dog", name: "Odie", barks: true}
